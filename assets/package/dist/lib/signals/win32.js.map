{"version":3,"sources":["../../../src/lib/signals/win32.js"],"names":["log","bindTaskkill","force","pid","tree","err","message","signalEscalations","SignalBinder","BaseSignalBinder","constructor","rl","input","process","stdin","output","stdout","on","emitGracefulExitRequest","emitForceExitRequest","unbind","close","removeListener"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,MAAMA,MAAM,qBAAM,6CAAN,CAAZ;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AAAA,iCAAO,WAAMC,GAAN,EAAa;AAClBH,UAAK,yBAAwBG,GAAI,WAAjC,EAA6CD,KAA7C;AACA,UAAI;AACF,cAAM,wBAASC,GAAT,EAAc,EAAEC,MAAM,IAAR,EAAcF,KAAd,EAAd,CAAN;AACD,OAFD,CAEE,OAAOG,GAAP,EAAY;AACZL,YAAI,2BAAJ,EAAiCK,IAAIC,OAArC;AACD;AACF,KAPD;;AAAA;AAAA;AAAA;AAAA;AAQD;;AAEM,MAAMC,gDAAoB,CAC/BN,aAAa,IAAb,CAD+B,CAA1B;;AAIA,MAAMO,YAAN,SAA2BC,wBAA3B,CAA4C;AACjDC,gBAAc;AACZ;;AAEA;AACA,SAAKC,EAAL,GAAU,+BAAwB;AAChCC,aAAOC,QAAQC,KADiB;AAEhCC,cAAQF,QAAQG;AAFgB,KAAxB,CAAV;;AAKA,SAAKL,EAAL,CAAQM,EAAR,CAAW,QAAX,EAAqB,KAAKC,uBAA1B;AACAL,YAAQI,EAAR,CAAW,UAAX,EAAuB,KAAKE,oBAA5B;AACD;;AAEDC,WAAS;AACP,SAAKT,EAAL,CAAQU,KAAR;AACAR,YAAQS,cAAR,CAAuB,UAAvB,EAAmC,KAAKH,oBAAxC;AACD;AAjBgD;QAAtCX,Y,GAAAA,Y","file":"win32.js","sourcesContent":["import taskkill from 'taskkill';\nimport debug from 'debug';\nimport { BaseSignalBinder } from './binder';\nimport { createInterface as createReadlineInterface } from 'readline';\n\nconst log = debug('take-home-tester:child-process:signal:win32');\n\nfunction bindTaskkill(force) {\n  return async pid => {\n    log(`Executing taskkill on ${pid}, force =`, force);\n    try {\n      await taskkill(pid, { tree: true, force });\n    } catch (err) {\n      log('Error executing taskkill:', err.message);\n    }\n  };\n}\n\nexport const signalEscalations = [\n  bindTaskkill(true),\n];\n\nexport class SignalBinder extends BaseSignalBinder {\n  constructor() {\n    super();\n\n    // https://stackoverflow.com/a/14861513/93308\n    this.rl = createReadlineInterface({\n      input: process.stdin,\n      output: process.stdout,\n    });\n\n    this.rl.on('SIGINT', this.emitGracefulExitRequest);\n    process.on('SIGBREAK', this.emitForceExitRequest);\n  }\n\n  unbind() {\n    this.rl.close();\n    process.removeListener('SIGBREAK', this.emitForceExitRequest);\n  }\n}\n"]}