{"version":3,"sources":["../../src/lib/scenario-location.js"],"names":["cwd","directories","tag","pathExpander","PathExpander","featurePaths","expandPathsWithExtensions","eventBroadcaster","EventEmitter","eventDataCollector","formatterHelpers","EventDataCollector","testCases","pickleFilter","matches","pickle","tags","some","t","name","map","uri","getTestCaseData","line","locations","findScenarios"],"mappings":";;;;;;;;+BAIO,WAA6B,EAAEA,GAAF,EAAOC,WAAP,EAAoBC,GAApB,EAA7B,EAAwD;AAC7D,UAAMC,eAAe,IAAIC,uBAAJ,CAAiBJ,GAAjB,CAArB;AACA,UAAMK,eAAe,MAAMF,aAAaG,yBAAb,CAAuCL,WAAvC,EAAoD,CAAE,SAAF,CAApD,CAA3B;;AAEA,UAAMM,mBAAmB,IAAIC,oBAAJ,EAAzB;AACA,UAAMC,qBAAqB,IAAIC,2BAAiBC,kBAArB,CAAwCJ,gBAAxC,CAA3B;;AAEA,UAAMK,YAAY,MAAM,0CAA2B;AACjDZ,SADiD,EAC5CO,gBAD4C,EAC1BF,YAD0B;AAEjDQ,oBAAc;AACZC,gBAAQ,EAAEC,MAAF,EAAR,EAAoB;AAClB,iBAAOA,OAAOC,IAAP,CAAYC,IAAZ,CAAiBC,KAAKA,EAAEC,IAAF,KAAWjB,GAAjC,CAAP;AACD;AAHW;AAFmC,KAA3B,CAAxB;;AASA,WAAOU,UAAUQ,GAAV,CAAc,UAAC,EAAEL,MAAF,EAAUM,GAAV,EAAD;AAAA,aAAqBZ,mBAAmBa,eAAnB,CAAmC;AAC3ED,WAD2E;AAE3EE,cAAMR,OAAOS,SAAP,CAAiB,CAAjB,EAAoBD;AAFiD,OAAnC,CAArB;AAAA,KAAd,CAAP;AAID,G;;kBApBqBE,a;;;;;AAJtB;;AACA;;;;AACA","file":"scenario-location.js","sourcesContent":["import { getTestCasesFromFilesystem, formatterHelpers } from 'cucumber';\nimport PathExpander from 'cucumber/lib/cli/path_expander';\nimport { EventEmitter } from 'events';\n\nexport async function findScenarios({ cwd, directories, tag }) {\n  const pathExpander = new PathExpander(cwd);\n  const featurePaths = await pathExpander.expandPathsWithExtensions(directories, [ 'feature' ]);\n\n  const eventBroadcaster = new EventEmitter();\n  const eventDataCollector = new formatterHelpers.EventDataCollector(eventBroadcaster);\n\n  const testCases = await getTestCasesFromFilesystem({\n    cwd, eventBroadcaster, featurePaths,\n    pickleFilter: {\n      matches({ pickle }) {\n        return pickle.tags.some(t => t.name === tag);\n      },\n    },\n  });\n\n  return testCases.map(({ pickle, uri }) => eventDataCollector.getTestCaseData({\n    uri,\n    line: pickle.locations[0].line,\n  }));\n}\n"]}