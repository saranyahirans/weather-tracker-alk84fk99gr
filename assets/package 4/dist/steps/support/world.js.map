{"version":3,"sources":["../../../src/steps/support/world.js"],"names":["Before","setWorldConstructor","eventBroadcaster","runner","_request","type","data","emit","resetRequest","attach","req","res","request","defaults","json","useQuerystring","proxy","baseUrl","protocol","hostname","port","runConfig","simple","resolveWithFullResponse","getResponse","updateRequest","obj","getResponseBody","promise","get"],"mappings":";;AAAA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA,iCAAkB,CAAC,EAAEA,MAAF,EAAUC,mBAAV,EAA+BC,gBAA/B,EAAiDC,MAAjD,EAAD,KAA+D;AAC/E,8BAAcC,wBAAd,EAAwB,CAACC,IAAD,EAAOC,IAAP,KAAgBJ,iBAAiBK,IAAjB,CAAsBF,IAAtB,EAA4BC,IAA5B,CAAxC;;AAEAN,SAAO,YAAY;AAAE,SAAKQ,YAAL;AAAsB,GAA3C;;AAEAP,sBAAoB,UAAU,EAAEQ,MAAF,EAAV,EAAsB;AACxC,QAAIC,GAAJ,EAASC,GAAT;;AAEA,UAAMC,UAAUR,yBAASS,QAAT,CAAkB;AAChCC,YAAM,IAD0B;AAEhCC,sBAAgB,IAFgB;AAGhCC,aAAO,KAHyB;AAIhCC,eAAS,iBAAU;AACjBC,kBAAU,MADO;AAEjBC,kBAAU,WAFO;AAGjBC,cAAMjB,OAAOkB,SAAP,CAAiBD;AAHN,OAAV,CAJuB;AAShCE,cAAQ,KATwB;AAUhCC,+BAAyB;AAVO,KAAlB,CAAhB;;AAaA,aAASC,WAAT,GAAuB;AACrB,aAAOb,QAAQA,MAAMC,QAAQF,GAAR,CAAd,CAAP;AACD;;AAED,WAAO;AACLE,aADK;AAELH,YAFK;;AAILgB,oBAAcC,GAAd,EAAmB;AACjBhB,cAAM,2BAAeA,GAAf,EAAoBgB,GAApB,CAAN,CADiB,CACe;AACjC,OANI;;AAQLF,iBARK;AASLG,wBAAkB;AAChB,eAAOH,cAAcI,OAAd,GAAwBC,GAAxB,CAA4B,MAA5B,CAAP;AACD,OAXI;;AAaLrB,qBAAe;AACbE,cAAM,EAAN;AACAC,cAAM,IAAN;AACD;AAhBI,KAAP;AAkBD,GAtCD;AAuCD,CA5CD","file":"world.js","sourcesContent":["import { defineSupportCode } from 'cucumber';\nimport { mergeDeepRight } from 'ramda';\n\nimport debugRequests from 'request-debug';\nimport _request from 'request-promise';\nimport { format as formatUrl } from 'url';\n\ndefineSupportCode(({ Before, setWorldConstructor, eventBroadcaster, runner }) => {\n  debugRequests(_request, (type, data) => eventBroadcaster.emit(type, data));\n\n  Before(function () { this.resetRequest(); });\n\n  setWorldConstructor(function ({ attach }) {\n    let req, res;\n\n    const request = _request.defaults({\n      json: true,\n      useQuerystring: true,\n      proxy: false,\n      baseUrl: formatUrl({\n        protocol: 'http',\n        hostname: '127.0.0.1',\n        port: runner.runConfig.port,\n      }),\n      simple: false,\n      resolveWithFullResponse: true,\n    });\n\n    function getResponse() {\n      return res || (res = request(req));\n    }\n\n    return {\n      request,\n      attach,\n\n      updateRequest(obj) {\n        req = mergeDeepRight(req, obj); // request opts don't have any arrays, so this should do fine.\n      },\n\n      getResponse,\n      getResponseBody() {\n        return getResponse().promise().get('body');\n      },\n\n      resetRequest() {\n        req = {};\n        res = null;\n      },\n    };\n  });\n});\n"]}