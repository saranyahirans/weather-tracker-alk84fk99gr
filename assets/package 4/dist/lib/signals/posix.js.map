{"version":3,"sources":["../../../src/lib/signals/posix.js"],"names":["log","bindSignal","sig","pid","signal","process","kill","signalEscalations","SignalBinder","BaseSignalBinder","constructor","on","emitGracefulExitRequest","emitForceExitRequest","unbind","removeListener"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,qBAAM,6CAAN,CAAZ;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB;AACA;AAAA,iCAAO,WAAMC,GAAN;AAAA,aAAaC,OAAO,CAACD,GAAR,EAAaD,GAAb,CAAb;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,SAASE,MAAT,CAAgBD,GAAhB,EAAqBC,MAArB,EAA6B;AAC3BJ,MAAK,WAAUI,MAAO,WAAUD,GAAI,EAApC;AACAE,UAAQC,IAAR,CAAaH,GAAb,EAAkBC,MAAlB;AACD;;AAEM,MAAMG,gDAAoB,CAC/BN,WAAW,QAAX,CAD+B,EAE/BA,WAAW,SAAX,CAF+B,EAG/BA,WAAW,SAAX,CAH+B,CAA1B;;AAMA,MAAMO,YAAN,SAA2BC,wBAA3B,CAA4C;AACjDC,gBAAc;AACZ;AACAL,YACGM,EADH,CACM,QADN,EACgB,KAAKC,uBADrB,EAEGD,EAFH,CAEM,QAFN,EAEgB,KAAKC,uBAFrB,EAGGD,EAHH,CAGM,SAHN,EAGiB,KAAKC,uBAHtB,EAIGD,EAJH,CAIM,SAJN,EAIiB,KAAKE,oBAJtB,EAKGF,EALH,CAKM,MALN,EAKc,KAAKE,oBALnB;AAMD;;AAEDC,WAAS;AACPT,YACGU,cADH,CACkB,QADlB,EAC4B,KAAKH,uBADjC,EAEGG,cAFH,CAEkB,QAFlB,EAE4B,KAAKH,uBAFjC,EAGGG,cAHH,CAGkB,SAHlB,EAG6B,KAAKH,uBAHlC,EAIGG,cAJH,CAIkB,SAJlB,EAI6B,KAAKF,oBAJlC,EAKGE,cALH,CAKkB,MALlB,EAK0B,KAAKF,oBAL/B;AAMD;AAlBgD;QAAtCL,Y,GAAAA,Y","file":"posix.js","sourcesContent":["import debug from 'debug';\nimport { BaseSignalBinder } from './binder';\n\nconst log = debug('take-home-tester:child-process:signal:posix');\n\nfunction bindSignal(sig) {\n  // Negating the PID sends the signal to the entire process tree.\n  return async pid => signal(-pid, sig);\n}\n\nfunction signal(pid, signal) {\n  log(`Sending ${signal} to pid ${pid}`);\n  process.kill(pid, signal);\n}\n\nexport const signalEscalations = [\n  bindSignal('SIGINT'),\n  bindSignal('SIGTERM'),\n  bindSignal('SIGKILL'),\n];\n\nexport class SignalBinder extends BaseSignalBinder {\n  constructor() {\n    super();\n    process\n      .on('SIGHUP', this.emitGracefulExitRequest)\n      .on('SIGINT', this.emitGracefulExitRequest)\n      .on('SIGQUIT', this.emitGracefulExitRequest)\n      .on('SIGTERM', this.emitForceExitRequest)\n      .on('exit', this.emitForceExitRequest);\n  }\n\n  unbind() {\n    process\n      .removeListener('SIGHUP', this.emitGracefulExitRequest)\n      .removeListener('SIGINT', this.emitGracefulExitRequest)\n      .removeListener('SIGQUIT', this.emitGracefulExitRequest)\n      .removeListener('SIGTERM', this.emitForceExitRequest)\n      .removeListener('exit', this.emitForceExitRequest);\n  }\n}\n"]}