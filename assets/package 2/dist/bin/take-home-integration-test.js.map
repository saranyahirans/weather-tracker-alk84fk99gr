{"version":3,"sources":["../../src/bin/take-home-integration-test.js"],"names":["Bluebird","R","config","longStackTraces","program","usage","option","parse","process","argv","command","console","log","outputHelp","exit","global","cli","Cli","cwd","options","featurePaths","__dirname","stepPaths","pick","cucumberArgs","args","stdout","getOutStream","colors","outFile","signals","SignalBinder","on","opts","resolve","precheck","then","ok","message","run","catch","err","error","finally","unbind","enableColors","filePath","out","PassThrough","noColors","pipe","StripAnsiTransform","end"],"mappings":";;;;AAEA;;;;AACA;;AACA;;AACA;;AACA;;IAAYA,Q;;AACZ;;AACA;;AACA;;AACA;;IAAYC,C;;AACZ;;AACA;;;;;;AAEAD,SAASE,MAAT,CAAgB,EAAEC,iBAAiB,IAAnB,EAAhB;;AAEA;;AAEAC,oBACGC,KADH,CACS,oDADT,EAEGC,MAFH,CAEU,qBAFV,EAEiC,wCAFjC,EAE2E,IAF3E,EAGGA,MAHH,CAGU,mBAHV,EAG+B,kBAH/B,EAGmD,IAHnD,EAIGA,MAJH,CAIU,uBAJV,EAImC,kBAJnC,EAIuD,IAJvD,EAKGA,MALH,CAKU,aALV,EAKyB,iBALzB,EAMGA,MANH,CAMU,uBANV,EAMmC,oDANnC,EAOGA,MAPH,CAOU,gBAPV,EAO4B,sBAP5B,EAQGA,MARH,CAQU,iBARV,EAQ6B,sBAR7B,EASGA,MATH,CASU,uBATV,EASmC,yCATnC,EAUGC,KAVH,CAUSC,QAAQC,IAVjB;;AAYA,IAAI,CAACL,oBAAQM,OAAb,EAAsB;AACpBC,UAAQC,GAAR,CAAY,uBAAZ;;AAEAR,sBAAQS,UAAR;AACAL,UAAQM,IAAR,CAAa,CAAb;AACD;;AAEDC,OAAOX,OAAP,GAAiBA,mBAAjB;;AAEA,MAAMY,MAAM,IAAIC,QAAJ,CAAQ;AAClBC,OAAKV,QAAQU,GAAR,EADa;AAElBC;AACEC,kBAAc,CAAE,mBAAYC,SAAZ,EAAuB,gBAAvB,CAAF,CADhB;AAEEC,eAAW,CAAE,mBAAYD,SAAZ,EAAuB,UAAvB,CAAF;AAFb,KAGKpB,EAAEsB,IAAF,CAAO,CACR,QADQ,EAER,OAFQ,EAGR,OAHQ,EAIR,MAJQ,EAKR,MALQ,EAMR,SANQ,EAOR,UAPQ,CAAP,EAQAnB,mBARA,CAHL,CAFkB;AAelBoB,gBAAcpB,oBAAQqB,IAfJ;AAgBlBC,UAAQC,aAAavB,oBAAQwB,MAArB,EAA6BxB,oBAAQyB,OAArC;AAhBU,CAAR,CAAZ;;AAmBA,MAAMC,UAAU,IAAIC,qBAAJ,EAAhB;;AAEAD,QAAQE,EAAR,CAAW,mBAAX,EAAgCC,QAAQjB,IAAIF,IAAJ,CAASmB,IAAT,CAAxC;;AAEAjC,SAAS;AAAT,CACGkC,OADH,CACWlB,IAAImB,QAAJ,EADX,EAEGC,IAFH,CAEQ,CAAC,EAAEC,EAAF,EAAMC,OAAN,EAAD,KAAqB;AACzB,MAAID,EAAJ,EACE,OAAOrB,IAAIuB,GAAJ,EAAP;;AAEF5B,UAAQC,GAAR,CAAY0B,OAAZ;AACA,SAAO,IAAP;AACD,CARH,EASGE,KATH,CASSC,OAAO;AACZ9B,UAAQ+B,KAAR,CAAc,uBAAYD,GAAZ,CAAd;AACAjC,UAAQM,IAAR,CAAa,CAAb;AACD,CAZH,EAaG6B,OAbH,CAaW,MAAMb,QAAQc,MAAR,EAbjB;;AAeA,SAASjB,YAAT,CAAsBkB,YAAtB,EAAoCC,QAApC,EAA8C;AAC5C,QAAMC,MAAM,IAAIC,mBAAJ,EAAZ;;AAEA,QAAMC,WAAWF,IAAIG,IAAJ,CAAS,IAAIC,0BAAJ,EAAT,CAAjB;;AAEA,GAACN,eAAeE,GAAf,GAAqBE,QAAtB,EAAgCC,IAAhC,CAAqC1C,QAAQkB,MAA7C,EAAqD,EAAE0B,KAAK,KAAP,EAArD;;AAEA,MAAIN,QAAJ,EACEG,SAASC,IAAT,CAAc,2BAAkBJ,QAAlB,CAAd;;AAEF,SAAOC,GAAP;AACD","file":"take-home-integration-test.js","sourcesContent":["\n\nimport program from 'commander';\nimport { install as installSourceMapSupport } from 'source-map-support';\nimport { resolve as resolvePath } from 'path';\nimport { fullStack as formatStack } from 'verror';\nimport * as Bluebird from 'bluebird';\nimport { Cli } from '../lib/cli';\nimport { StripAnsiTransform } from '../lib/format';\nimport { SignalBinder } from '../lib/signals';\nimport * as R from 'ramda';\nimport { PassThrough } from 'stream';\nimport { createWriteStream } from 'fs';\n\nBluebird.config({ longStackTraces: true });\n\ninstallSourceMapSupport();\n\nprogram\n  .usage('--command <cmd> [options] [-- <cucumber-args ...>]')\n  .option('-c, --command <cmd>', 'The command to run to start the server', null)\n  .option('-p, --port <port>', 'The port to bind', null)\n  .option('-h, --host <hostname>', 'The host to bind', null)\n  .option('-s, --score', 'Print the score')\n  .option('-n, --check-new [dir]', 'Check that additional scenarios have been provided')\n  .option('-D, --no-debug', 'Disable debug output')\n  .option('-C, --no-colors', 'Disable color output')\n  .option('-o, --out-file <path>', 'Writes output to file as well as stdout')\n  .parse(process.argv);\n\nif (!program.command) {\n  console.log('--command is required');\n\n  program.outputHelp();\n  process.exit(1);\n}\n\nglobal.program = program;\n\nconst cli = new Cli({\n  cwd: process.cwd(),\n  options: {\n    featurePaths: [ resolvePath(__dirname, '../../features') ],\n    stepPaths: [ resolvePath(__dirname, '../steps') ],\n    ...R.pick([\n      'colors',\n      'score',\n      'debug',\n      'port',\n      'host',\n      'command',\n      'checkNew',\n    ], program),\n  },\n  cucumberArgs: program.args,\n  stdout: getOutStream(program.colors, program.outFile),\n});\n\nconst signals = new SignalBinder();\n\nsignals.on('userRequestedExit', opts => cli.exit(opts));\n\nBluebird // node 8 does not support Promise#finally\n  .resolve(cli.precheck())\n  .then(({ ok, message }) => {\n    if (ok)\n      return cli.run();\n\n    console.log(message);\n    return null;\n  })\n  .catch(err => {\n    console.error(formatStack(err));\n    process.exit(1);\n  })\n  .finally(() => signals.unbind());\n\nfunction getOutStream(enableColors, filePath) {\n  const out = new PassThrough();\n\n  const noColors = out.pipe(new StripAnsiTransform());\n\n  (enableColors ? out : noColors).pipe(process.stdout, { end: false });\n\n  if (filePath)\n    noColors.pipe(createWriteStream(filePath));\n\n  return out;\n}\n"]}